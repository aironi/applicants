<persistence version="1.0"
             xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd">
    <persistence-unit name="applicants-unit" transaction-type="JTA">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
        <jta-data-source>applicantsDs</jta-data-source>
        <non-jta-data-source>applicantsDsUnmanaged</non-jta-data-source>

        <!-- Classes -->
        <class>org.silverduck.applicants.domain.Applicant</class>
        <!--<exclude-unlisted-classes>false</exclude-unlisted-classes>-->

        <!-- Properties -->
        <properties>
            <property name="eclipselink.target-database"
                      value="org.eclipse.persistence.platform.database.HSQLPlatform"/>
            <property name="javax.persistence.jdbc.driver" value="org.hsqldb.jdbcDriver"/>

            <!-- Purely for Demo-purposes, we use a in-memory database -->
            <property name="javax.persistence.jdbc.url" value="jdbc:hsqldb:mem:applicantsDb"/>

            <!--
            <property name="javax.persistence.jdbc.user" value="SA"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            -->
            <property name="eclipselink.logging.level" value="FINE"/>
            <property name="eclipselink.ddl-generation" value="drop-and-create-tables"/>
            <!--<property name="eclipselink.ddl-generation" value="create-tables"/>-->
            <property name="eclipselink.ddl-generation.output-mode" value="database"/>
            <property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)"/>
        </properties>
    </persistence-unit>
</persistence>